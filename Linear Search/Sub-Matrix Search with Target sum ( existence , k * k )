#include<iostream>
#include<cstring>
#include<vector>
#include<stdlib.h>
using namespace std;
bool sum_exists(int k , int s , vector<vector<int>> matrix)
{
    int n = matrix.size() , m = matrix[0].size();
    int dp[n+1][m+1];
    memset(dp , 0 , sizeof(dp));
    for(int st = 0 ; st < n ; st++)
    {
        for(int end = 0 ; end < m ; end++)
        {
            dp[st+1][end+1] = dp[st+1][end] + dp[st][end+1] - dp[st][end] + matrix[st][end]; 
        }
    }
    for(int st = 0 ; st <= n-k; st ++)
    {
        for(int end = 0 ; end <= m-k ; end++)
        {
            int sum = dp[st+k][end+k] + dp[st][end] - ( dp[st+k][end] + dp[st][end+k] );
            if(sum == s)
                return 1;  
        }
    }
    return 0;
}
int main()
{
    int k = 3, sum = 99;
    vector<vector<int>> matrix = {
        { 1, 2, 3, 4 },
        { 5, 6, 7, 8 },
        { 9, 10, 11, 12 },
        { 13, 14, 15, 16 },
    };
    cout << sum_exists(k , sum , matrix);
    return 0;
}
