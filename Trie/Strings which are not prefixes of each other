#include<bits/stdc++.h>
using namespace std;
struct node
{
  node* child[26];
  bool end;
  node(){
    for(int ind = 0 ; ind < 26 ; ind++)
      child[ind] = NULL;
    end = 0;
  }
}* root = NULL;
node* insert(node * root , string s)
{
  if(root == NULL)
  {
    root = new node();
  }
  node * temp = root;
  for(auto c : s)
  {
    int index = c - 'a';
    //cout << "Inserting : " << c << endl;
    if(temp->child[index] == NULL)
      temp->child[index] = new node();
    temp = temp->child[index];
  }
  int index;
  for(index = 0 ; index < 26 ; index++)
  {
    if(temp->child[index])  break;
  }
  if(index == 26)
    temp->end = 1;
  return root;
}
void get(node * root , vector<string> & ans , string s)
{
  if(root->end)
  {
    ans.push_back(s);
    return;
  }
  for(int index = 0 ; index < 26 ; index++)
  {
    if(root->child[index])
    {
      s += (index + 'a');
      get(root->child[index] , ans , s);
      s.pop_back();
    }
  }
}
vector<string> func(vector<string> &arr)
{
  vector<string> ans;
  for(auto s : arr)
  {
    root = insert(root , s);
  }
  get(root , ans , "");
  return ans;
}
int main()
{
  vector<string> arr{"apple", "app", "there", "the", "like" };
  vector<string> ans = func(arr);
  cout <<"Strings which are not the prefixes: ";
  for(auto s : ans)
    cout << s << " , ";
  return 0;
}
