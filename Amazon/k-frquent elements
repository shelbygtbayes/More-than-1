class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> ans;
        if(nums.size() == 0)
            return ans;
        priority_queue<pair<int,int>> pq;
        unordered_map<int,int> cnt;
        for(auto n : nums)
        {
            cnt[n]++;
        }
        for(auto it = cnt.begin() ; it!= cnt.end() ; it++)
        {
            int element = (*it).first , count = (*it).second;
            pq.push(make_pair(count,element));
        }
        for(int i = 0 ; i < k ; i++)
        {
            pair<int,int> p = pq.top();
            ans.push_back(p.second);
            pq.pop();
        }
        return ans;
    }
};
/*
element cnt
    1    3
    2    2
    3    1
    */
