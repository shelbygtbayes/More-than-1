/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode* s, TreeNode* t , bool prev_set)
    {
        if(!s and !t) return 1;
        else if(!s or !t) return 0;
        if(s->val == t->val)
        {
            if(check(s->left , t->left , 1) and check(s->right , t->right , 1))
                 return 1;
        }
        if(prev_set)
            return 0;
        return check(s->left , t , 0) || check(s->right , t , 0);
    }
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(!s and !t) return 1;
        else if(!s or !t) return 0;
        return check(s,t,0);
    }
};

