#include<iostream>
#include<vector>
#include<algorithm>
#include<unordered_map>
#include<set>
using namespace std;
int func(vector<int> arr, int prod)
{
  unordered_map<int , int > cnt;
  for(auto elem : arr)
    cnt[elem]++;
  set< vector<int> > ans;
  int result = 0;
  for(int p1 = 1 ; p1 * p1 < prod ; p1++)
  {
    if(prod % p1 == 0 and cnt[p1])
    {
      int num1 = prod / p1;
      for(int p2 = 1 ; p2 * p2 < num1 ; p2++)
      {
        if(num1 % p2 == 0 and cnt[p2])
        {
          int num2 = num1 / p2;
          if(cnt[num2])
          {
            vector<int> temp{p1 , p2 , num2};
            sort(temp.begin() , temp.end());
            //cout << p1 << " " << p2 << " " << num2 << endl;
            int prev_size = ans.size();
            ans.insert(temp);
            if(ans.size() > prev_size) // Inserted new one
            {
                // if all are different
                if(p1 != p2 and p2 != num2)
                {
                  result += cnt[p1] * cnt[p2] * cnt[num2];
                } // if all are same
                else if(p1 == p2 and p2 == num2)
                {
                  int count = cnt[p1];
                  result +=  (count * (count-1) * (count-2))/6;// n C 3
                }// if any of 2 are same
                else if(p1 == p2 and p1 != num1)
                {
                  int count = cnt[p1];
                  result +=  cnt[num1] * (count * (count-1))/2;// n C 2
                }
                else if(p1 == num1 and p1 != p2)
                {
                  int count = cnt[p1];
                  result +=  cnt[p2] * (count * (count-1))/2;// n C 2
                }
                else
                {
                  int count = cnt[p2];
                  result +=  cnt[p1] * (count * (count-1))/2;// n C 2
                }
            }
          }
        }
      }
    }
  }
  /*for(auto v : ans)
  {
    cout << v[0] << " " << v[1] << " " << v[2] << endl;
  }*/
  return result;
}
int main()
{
  vector<int> arr{1, 4, 6, 2, 3, 8 , 2};
  int prod = 24;
  cout << func(arr, prod);
  return 0;
}
