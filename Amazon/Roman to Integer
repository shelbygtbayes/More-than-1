class Solution {
public:
    int val(char c)
    {
        if(c == 'I')    return 1;
        else if(c == 'V') return 5;   
        else if(c == 'X') return 10;
        else if(c == 'L') return 50;
        else if(c == 'C') return 100;
        else if(c == 'D') return 500;
        else return 1000;
    }
    int romanToInt(string s) {
        int n = s.size() , ans = 0 , ind = 0;
        while(ind < n)
        {
            if(ind + 1 < n and val(s[ind]) < val(s[ind+1]))
            {
                ans += val(s[ind+1]) - val(s[ind]);
                ind+=2;
            }
            else
            {
                ans += val(s[ind]);
                ind+=1;
            }
        }
        return ans;
    }
};







/*
    int romanToInt(string s) {
        map< char, int > hsh;
        hsh['I'] = 1;
        hsh['V'] = 5;
        hsh['X'] = 10;
        hsh['L'] = 50;
        hsh['C'] = 100;
        hsh['D'] = 500;
        hsh['M'] = 1000;
        int st = 0 , n = s.size();
        int ans = 0;
        while(st < n-1)
        {
            string sub = s.substr(st , 2);
            if(sub == "IV")
            {
                ans += 4;
                st+=2;
            }
            else if(sub == "IX")
            {
                ans += 9;
                st+=2;
            }
            else if(sub == "XL")
            {
                ans += 40;
                st+=2;
            }
            else if(sub == "XC")
            {
                ans += 90;
                st+=2;
            }
            else if(sub == "CD")
            {
                ans += 400;
                st+=2;
            }
            else if(sub == "CM")    
            {
                ans += 900;
                st+=2;
            }
            else
            {
                ans += hsh[s[st]];
                st++;
            }
        }
        if(st < n)
            ans += hsh[s[st]];
        return ans;
    }
*/
