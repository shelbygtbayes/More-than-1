/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 // Iterative
 class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return root;
        queue< TreeNode* > q;
        q.push(root);
        while(!q.empty())
        {
            TreeNode* r = q.front();
            q.pop();
            TreeNode* temp = r->left;
            r->left = r->right;
            r->right = temp;
            if(r->left) q.push(r->left);
            if(r->right) q.push(r->right);
        }
        return root;
    }
};
 // Recursive
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return root;
        TreeNode* tl = NULL , *tr = NULL;
        if(root->left)
            tl = root->left;
        if(root->right)
            tr = root->right;
        root->left = tr;
        root->right = tl;
        root->left = invertTree(root->left);
        root->right = invertTree(root->right);
        return root;
    }
};
/*
     4                      
   /   \                   
  2     7                                           
 / \   / \
1   3 6   9


*/
