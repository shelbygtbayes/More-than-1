/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root)
    {
        if(!root) return 0;
        int l = height(root->left);
        int r = height(root->right);
        return max(l,r) + 1;
    }
    void func(vector<int> &ans , int h , TreeNode* root , bool &dir)
    {
        if(!root) return;
        if(h == 0)
        {
            ans.push_back(root->val);
            return;
        }
        if(dir)
        {
            func( ans , h-1 , root->left , dir);    
            func( ans , h-1 , root->right , dir);
        }
        else
        {
            func( ans , h-1 , root->right , dir);    
            func( ans , h-1 , root->left , dir);
        }
    }
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root) return ans;
        int ht = height(root);
        bool dir = 1;
        for(int h = 0 ; h < ht ; h++)
        {
            vector<int> temp;
            func(temp , h , root , dir);
            ans.push_back(temp);
            dir = !dir;
        }
        return ans;
    }
};
