/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height( TreeNode* root )
    {
        if(!root) return 0;
        int l = height(root->left);
        int r = height(root->right);
        return max(l,r) + 1;
    }
    void func( TreeNode* root , int &curr , int level)
    {
        if(level == 0)
        {
            curr = root->val;
            return;
        }
        if(root->left)
            func(root->left , curr , level-1);
        if(root->right)
            func(root->right , curr , level-1);
    }
    vector<int> rightSideView(TreeNode* root)
    {
        if(!root) return {};
        int h = height(root);
        vector<int> ans;
        for(int level = 0 ; level < h ; level++)
        {
            int curr;
            func(root , curr , level);
            ans.push_back(curr);
        }
        return ans;
    }
    
};
