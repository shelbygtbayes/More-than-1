//Iterative
vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(!root) return ans;
        stack<TreeNode*> st;
        st.push(root);
        while(!st.empty())
        {
            TreeNode* n = st.top();
            st.pop();
            ans.push_back(n->val);
            if(n->right)
                st.push(n->right);
            if(n->left)
                st.push(n->left);
        }
        return ans;
    }

//Recurrsive

 void func(TreeNode* root , vector<int> &ans)
   {
        if(!root) return;
        ans.push_back(root->val);
        func(root->left , ans);
        func(root->right , ans);
  }
