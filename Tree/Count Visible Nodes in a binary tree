#include<iostream>
using namespace std;
struct node{
    int v;
    node* left;
    node* right;
}*root = NULL;
node* create(int val)
{
    node* n = new node();
    n->left = n->right = NULL;
    n->v = val;
}
int count(node* root , int val)
{
    if(!root) return 0;
    int ans = count(root->left , val) + count(root->right , val);
    if(root->v > val)
        ans += 1;
    return ans;
}
int func(node* root)
{
    if(!root) return 0;
    return count(root , root->v) + 1;
}
int main()
{
    /*root = create(5);
    root->left = create(3);
    root->left->left = create(20);
    root->left->right = create(21);
    root->right = create(10);
    root->right->left = create(1);
    */
    root = create(-1);
    root->right = create(-2);
    root->right->right = create(-3);
    cout << func(root);
    return 0;
}
/*
      5 
     /  \
    3    10
  /  \   /
20   21 1
<---------------->
      -1
        \
         -2
           \
            -3
*/
