class Solution {
public:
    bool check(int m , int k , vector<int> & arr , int days)
    {
        int res = 0 ,cnt = 0 , n = arr.size();
        //  O(n)
        for(auto & d : arr)
        {
            if(d <= days)
                cnt++;
            else
                cnt = 0;
            if(cnt == k)
            {
                cnt = 0;
                res++;
            }
        }
        return res >= m;
        /* TLE 
        while(ind <= n-k)
        {
            int len;
            for(len = 0 ; len < k ; len++)
            {
                if(arr[ind+len] > days)
                    break;
            }
            if(len == k)
            {
                cnt++;
                ind = len+ind;
            }
            else
                ind++;
        }
        return cnt >= m;*/
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        if( bloomDay.size() < m*k )
            return -1;
        int l = 1;          //*min_element(bloomDay.begin() , bloomDay.end());
        int r = 1e9;       //*max_element(bloomDay.begin() , bloomDay.end());
        int ans;
        while( l <= r )
        {
            int mid = l + (r-l)/2;
            if(check(m,k,bloomDay,mid))
            {
                r = mid-1;
                ans = mid;
            }
            else
            {
                l = mid+1;
            }
        }
        return ans;
    }
};

