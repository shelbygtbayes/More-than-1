class Solution {
public:
    int shipWithinDays(vector<int>& weights, int D) {
        int n = weights.size();
        auto check = [&](int w)
        {
            int sum = 0 , days = 1;
            for(int ind = 0 ; ind < n ; ind++)
            {
                if(sum + weights[ind] <= w)
                    sum += weights[ind];
                else
                {
                    days++;
                    sum = weights[ind];
                }
            }
            return days <= D;
        };
        int l = *max_element(weights.begin() , weights.end()) , r = accumulate(weights.begin() , weights.end(),0) , ans = INT_MAX;
        while( l <= r )
        {
            int m = l + (r-l)/2;
            if(check(m))
            {
                ans = m;
                r = m-1;
            }
            else
                l = m+1;
        }
        return ans;
    }
};
