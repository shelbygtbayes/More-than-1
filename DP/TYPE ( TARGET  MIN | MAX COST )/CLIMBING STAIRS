class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size();
        if(n < 2) return 0;
        int dp[n+1]; // Represent Min cost to reach level 'i'
        cost.push_back(0);
        memset(dp,INT_MAX,sizeof(dp));
        dp[0] = 0; // Given can start from level-0 |  1
        dp[1] = 0;
        for(int i = 2 ; i <= n ; i++)
        {
           // NOW THINK ON STEP 'i-1' , PAY THE COST ( cost[i-1] ) AND REACH level 'i'
          //  SIMILARLY FOR 'i-2' 
         //  TAKE THE MINIMUM OF ABOVE WAYS TO OPTIMIZE( MINIMIZE ) THE COST
            dp[i] = min(dp[i-1] + cost[i-1], dp[i-2] + cost[i-2]); 
        }
        return dp[n];
    }
};
