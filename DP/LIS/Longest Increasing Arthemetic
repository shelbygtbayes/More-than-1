class Solution {
public:
    int longestArithSeqLength(vector<int>& nums) {
        int n = nums.size();
        if(n == 2)
            return n;
        unordered_map<int,unordered_map<int,int>> hsh;
        int ans = 0;
        for(int end = 1 ; end < n ; end++)
        {
            for(int curr = 0 ; curr < end ; curr++)
            {
                int diff = nums[end] - nums[curr];
                if(hsh[diff].find(curr) != hsh[curr].end())
                {
                    hsh[diff][end] = max( hsh[diff][end] , hsh[diff][curr] + 1);
                }
                else
                {
                    hsh[diff][end] = 2; 
                }
                ans = max( ans , hsh[diff][end] );
            }
        }
        return ans;
    }
};
/*
9      4     7       2     10
0      1     2       3     4
             |             |       
            st             end
            
4   5  4    5   4   5   5   5   5
    
    hsh[0] = 2  5   5
    diff = nums[end] - nums[st]                                 
        2   -   7   =   -5     unordered_map<int , int> last_update , hsh; 
    diff = 4 -9 = 5 hsh[-5]= 2 + 1 = 3      (3)   
    diff = 7-4 = 3 hsh[3] = 2 +1 = 3        (4)
    diff = 7 - 9= -2 hsh[-2] = 2            (2)
                        hsh[8] = 1;
max_hash_value = 3*/
