class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        if(n <= 1) return n;
        vector<int> dp(n,1);
        // Max Length of Increasing subsequence from index = 0 to index 'j'
        int ans = -1;
        for(int ind = 1 ; ind < n ; ind++)
        {
            for(int j = 0; j < ind ; j++)
            {
                if(nums[j] < nums[ind])
                {
                    dp[ind] = max(dp[ind] , dp[j]+1);
                    ans = max(ans , dp[ind]);
                }
            }
        }
        if(ans == -1) return 1;
        return ans;
    }
};
//L(i) = 1+ {Max L(j) for all j < i and A[j] < A[i]} 
