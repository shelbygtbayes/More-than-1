/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        
        queue<TreeNode*> q;
        q.push(root);
        int max_sum = root->val;
       
        int l = 0 , ans = 1;
       
        while(!q.empty())
        {
            int size = q.size() , sum = 0;
            bool islast = 1;
            for(int s = 0 ; s < size ; s++)
            {
                TreeNode* node = q.front();
                q.pop();
                if(node->left)
                {
                    islast = 0;
                    q.push(node->left);
                    sum += node->left->val;
                }
                    
                if(node->right)
                {
                    islast = 0;
                    q.push(node->right);
                    sum += node->right->val;
                }
            }
            l++;
            if(!islast)
            {
                if(sum > max_sum)
                {
                    ans = l+1;
                    max_sum = sum;
                }
            }
        }
        return ans;
    }
};
