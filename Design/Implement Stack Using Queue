Use 1 dummy queue to push 1st n-1 elements to it, pop the last element then Push those elements from q2 to original q1
class MyStack {
public:
    /** Initialize your data structure here. */
    queue<int> q1 , q2;
    MyStack() {
        
    }
    
    /** Push element x onto stack. */
    void push(int x) {
        q1.push(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    int pop() {
        int s = q1.size();
        for(int ind = 0 ; ind < s - 1 ; ind++)
        {
            int x = q1.front();
            q1.pop();
            q2.push(x);
        }
        int ans = q1.front();
        q1.pop();
        while(!q2.empty())
        {
            int x = q2.front();
            q2.pop();
            q1.push(x);
        }
        return ans;
       }
    
    /** Get the top element. */
    int top() {
        return q1.back();
    }
    
    /** Returns whether the stack is empty. */
    bool empty() {
        return q1.size() == 0;
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
