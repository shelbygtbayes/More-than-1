class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& A, vector<vector<int>>& B) {
        int n = A.size() , m = B.size();
        vector<vector<int>> ans;

        if(m == 0 || n == 0)
            return ans;
        
        int ind1 = 0 , ind2 = 0;
        while(ind1 < n and ind2 < m)
        {
            int low = max(A[ind1][0] , B[ind2][0]);
            int high = min(A[ind1][1] , B[ind2][1]);
            if(low <= high)
                ans.push_back(vector<int>{low,high});
                // Move the index having lower ending point ( right value )
            if(A[ind1][1] < B[ind2][1])
                ind1++;
            else
                ind2++;
        }
        return ans;
    }
};
/*          |        
A: [0,2]   [4,10]  [13,23]  [24,25]
B: [1,5]   [8,12]  [15,24]  [25,26]
       |                                      

since sorted
max_left
min_right
[1,2]   [8,10]  [15,23]  [25,25]
[5,5]   [24,24]
*/
